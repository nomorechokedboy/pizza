definitions:
  entities.UserEmail:
    properties:
      email:
        type: string
    type: object
  entities.UserLogin:
    properties:
      identifier:
        type: string
      password:
        type: string
    type: object
  entities.UserPassword:
    properties:
      password:
        type: string
    type: object
  entities.UserReq:
    properties:
      avatar:
        type: string
      email:
        type: string
      fullname:
        type: string
      password:
        type: string
      phonenumber:
        type: string
      username:
        type: string
    type: object
  fiber.Map:
    additionalProperties: true
    type: object
  presenter.Response:
    properties:
      data:
        $ref: '#/definitions/fiber.Map'
      message:
        type: string
      status:
        type: integer
    type: object
info:
  contact: {}
  description: This is a web blog
  title: web Blog
  version: "1.0"
paths:
  /api/v1/token/refresh_token:
    get:
      description: Create a new access token.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: create a new access token
      tags:
      - Token
  /api/v1/users/:
    get:
      consumes:
      - application/json
      description: Get UserInfo by accessToken
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenter.Response'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get user infor by token
      tags:
      - Users
  /api/v1/users/forgot-password:
    post:
      consumes:
      - application/json
      description: send email to user for reset password
      parameters:
      - description: user email
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/entities.UserEmail'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenter.Response'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: option when user forgot password
      tags:
      - Users
  /api/v1/users/login:
    post:
      consumes:
      - application/json
      description: Use for login response the refresh_token and accessToken
      parameters:
      - description: Login
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/entities.UserLogin'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenter.Response'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: User Login
      tags:
      - Users
  /api/v1/users/register:
    post:
      consumes:
      - application/json
      description: Create New UserUsecase
      parameters:
      - description: New User
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/entities.UserLogin'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenter.Response'
        "400":
          description: Bad Request
        "409":
          description: Conflict
      summary: Create User
      tags:
      - Users
  /api/v1/users/reset-password:
    put:
      consumes:
      - application/json
      description: reset password by token
      parameters:
      - description: new Password
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/entities.UserPassword'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenter.Response'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: reset user password
      tags:
      - Users
  /api/v1/users/update:
    put:
      consumes:
      - application/json
      description: Update UserInfo by Id from accessToken
      parameters:
      - description: Updated User
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/entities.UserReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenter.Response'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update user infor by token
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    description: Apply "bearer " before token in authorization
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
